/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_NAVI_MASTER_PB_H_INCLUDED
#define PB_NAVI_MASTER_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* --- Requests --- */
typedef struct _ThrusterCommand {
    /* support 8 thrusters max, value range -1.0 ~ 1.0 */
    bool has_throttle0;
    float throttle0;
    bool has_throttle1;
    float throttle1;
    bool has_throttle2;
    float throttle2;
    bool has_throttle3;
    float throttle3;
    bool has_throttle4;
    float throttle4;
    bool has_throttle5;
    float throttle5;
    bool has_throttle6;
    float throttle6;
    bool has_throttle7;
    float throttle7;
} ThrusterCommand;

typedef struct _PWMDevCommand {
    /* pca9685 is 16-channel pwm controller */
    bool has_duty0;
    uint32_t duty0;
    bool has_duty1;
    uint32_t duty1;
    bool has_duty2;
    uint32_t duty2;
    bool has_duty3;
    uint32_t duty3;
    bool has_duty4;
    uint32_t duty4;
    bool has_duty5;
    uint32_t duty5;
    bool has_duty6;
    uint32_t duty6;
    bool has_duty7;
    uint32_t duty7;
    bool has_duty8;
    uint32_t duty8;
    bool has_duty9;
    uint32_t duty9;
    bool has_duty10;
    uint32_t duty10;
    bool has_duty11;
    uint32_t duty11;
    bool has_duty12;
    uint32_t duty12;
    bool has_duty13;
    uint32_t duty13;
    bool has_duty14;
    uint32_t duty14;
    bool has_duty15;
    uint32_t duty15;
} PWMDevCommand;

typedef struct _Commands {
    /* union message */
    bool has_msgTC;
    ThrusterCommand msgTC;
    bool has_msgPDC;
    PWMDevCommand msgPDC;
} Commands;

/* --- Responses --- */
typedef struct _DepthSensorResponse {
    float depth;
} DepthSensorResponse;

typedef struct _PressureSensorResponse {
    int32_t pressure;
} PressureSensorResponse;

typedef struct _Responses {
    /* union message */
    bool has_msgDSR;
    DepthSensorResponse msgDSR;
    bool has_msgPSR;
    PressureSensorResponse msgPSR;
} Responses;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define ThrusterCommand_init_default             {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define PWMDevCommand_init_default               {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define Commands_init_default                    {false, ThrusterCommand_init_default, false, PWMDevCommand_init_default}
#define DepthSensorResponse_init_default         {0}
#define PressureSensorResponse_init_default      {0}
#define Responses_init_default                   {false, DepthSensorResponse_init_default, false, PressureSensorResponse_init_default}
#define ThrusterCommand_init_zero                {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define PWMDevCommand_init_zero                  {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define Commands_init_zero                       {false, ThrusterCommand_init_zero, false, PWMDevCommand_init_zero}
#define DepthSensorResponse_init_zero            {0}
#define PressureSensorResponse_init_zero         {0}
#define Responses_init_zero                      {false, DepthSensorResponse_init_zero, false, PressureSensorResponse_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define ThrusterCommand_throttle0_tag            1
#define ThrusterCommand_throttle1_tag            2
#define ThrusterCommand_throttle2_tag            3
#define ThrusterCommand_throttle3_tag            4
#define ThrusterCommand_throttle4_tag            5
#define ThrusterCommand_throttle5_tag            6
#define ThrusterCommand_throttle6_tag            7
#define ThrusterCommand_throttle7_tag            8
#define PWMDevCommand_duty0_tag                  1
#define PWMDevCommand_duty1_tag                  2
#define PWMDevCommand_duty2_tag                  3
#define PWMDevCommand_duty3_tag                  4
#define PWMDevCommand_duty4_tag                  5
#define PWMDevCommand_duty5_tag                  6
#define PWMDevCommand_duty6_tag                  7
#define PWMDevCommand_duty7_tag                  8
#define PWMDevCommand_duty8_tag                  9
#define PWMDevCommand_duty9_tag                  10
#define PWMDevCommand_duty10_tag                 11
#define PWMDevCommand_duty11_tag                 12
#define PWMDevCommand_duty12_tag                 13
#define PWMDevCommand_duty13_tag                 14
#define PWMDevCommand_duty14_tag                 15
#define PWMDevCommand_duty15_tag                 16
#define Commands_msgTC_tag                       1
#define Commands_msgPDC_tag                      2
#define DepthSensorResponse_depth_tag            1
#define PressureSensorResponse_pressure_tag      1
#define Responses_msgDSR_tag                     1
#define Responses_msgPSR_tag                     2

/* Struct field encoding specification for nanopb */
#define ThrusterCommand_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, FLOAT,    throttle0,         1) \
X(a, STATIC,   OPTIONAL, FLOAT,    throttle1,         2) \
X(a, STATIC,   OPTIONAL, FLOAT,    throttle2,         3) \
X(a, STATIC,   OPTIONAL, FLOAT,    throttle3,         4) \
X(a, STATIC,   OPTIONAL, FLOAT,    throttle4,         5) \
X(a, STATIC,   OPTIONAL, FLOAT,    throttle5,         6) \
X(a, STATIC,   OPTIONAL, FLOAT,    throttle6,         7) \
X(a, STATIC,   OPTIONAL, FLOAT,    throttle7,         8)
#define ThrusterCommand_CALLBACK NULL
#define ThrusterCommand_DEFAULT NULL

#define PWMDevCommand_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, UINT32,   duty0,             1) \
X(a, STATIC,   OPTIONAL, UINT32,   duty1,             2) \
X(a, STATIC,   OPTIONAL, UINT32,   duty2,             3) \
X(a, STATIC,   OPTIONAL, UINT32,   duty3,             4) \
X(a, STATIC,   OPTIONAL, UINT32,   duty4,             5) \
X(a, STATIC,   OPTIONAL, UINT32,   duty5,             6) \
X(a, STATIC,   OPTIONAL, UINT32,   duty6,             7) \
X(a, STATIC,   OPTIONAL, UINT32,   duty7,             8) \
X(a, STATIC,   OPTIONAL, UINT32,   duty8,             9) \
X(a, STATIC,   OPTIONAL, UINT32,   duty9,            10) \
X(a, STATIC,   OPTIONAL, UINT32,   duty10,           11) \
X(a, STATIC,   OPTIONAL, UINT32,   duty11,           12) \
X(a, STATIC,   OPTIONAL, UINT32,   duty12,           13) \
X(a, STATIC,   OPTIONAL, UINT32,   duty13,           14) \
X(a, STATIC,   OPTIONAL, UINT32,   duty14,           15) \
X(a, STATIC,   OPTIONAL, UINT32,   duty15,           16)
#define PWMDevCommand_CALLBACK NULL
#define PWMDevCommand_DEFAULT NULL

#define Commands_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  msgTC,             1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  msgPDC,            2)
#define Commands_CALLBACK NULL
#define Commands_DEFAULT NULL
#define Commands_msgTC_MSGTYPE ThrusterCommand
#define Commands_msgPDC_MSGTYPE PWMDevCommand

#define DepthSensorResponse_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, FLOAT,    depth,             1)
#define DepthSensorResponse_CALLBACK NULL
#define DepthSensorResponse_DEFAULT NULL

#define PressureSensorResponse_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, INT32,    pressure,          1)
#define PressureSensorResponse_CALLBACK NULL
#define PressureSensorResponse_DEFAULT NULL

#define Responses_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  msgDSR,            1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  msgPSR,            2)
#define Responses_CALLBACK NULL
#define Responses_DEFAULT NULL
#define Responses_msgDSR_MSGTYPE DepthSensorResponse
#define Responses_msgPSR_MSGTYPE PressureSensorResponse

extern const pb_msgdesc_t ThrusterCommand_msg;
extern const pb_msgdesc_t PWMDevCommand_msg;
extern const pb_msgdesc_t Commands_msg;
extern const pb_msgdesc_t DepthSensorResponse_msg;
extern const pb_msgdesc_t PressureSensorResponse_msg;
extern const pb_msgdesc_t Responses_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define ThrusterCommand_fields &ThrusterCommand_msg
#define PWMDevCommand_fields &PWMDevCommand_msg
#define Commands_fields &Commands_msg
#define DepthSensorResponse_fields &DepthSensorResponse_msg
#define PressureSensorResponse_fields &PressureSensorResponse_msg
#define Responses_fields &Responses_msg

/* Maximum encoded size of messages (where known) */
#define Commands_size                            141
#define DepthSensorResponse_size                 5
#define NAVI_MASTER_PB_H_MAX_SIZE                Commands_size
#define PWMDevCommand_size                       97
#define PressureSensorResponse_size              11
#define Responses_size                           20
#define ThrusterCommand_size                     40

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
